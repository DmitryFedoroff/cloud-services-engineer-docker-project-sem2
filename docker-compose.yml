services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: runtime
    image: docker-project-backend:latest
    restart: on-failure
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - backend-logs:/var/log/app:rw
      - backend-data:/app/data:rw
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8081/health || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 512M
      restart_policy:
        condition: on-failure
    read_only: true
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    user: "10001:10001"
    networks:
      - inner-net
      - public-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NPM_TOKEN: ${NPM_TOKEN:-}
      target: runtime
    image: docker-project-frontend:latest
    container_name: momo-store-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - frontend-logs:/var/log/nginx:rw
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/momo-store/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    read_only: true
    tmpfs:
      - /tmp:uid=101,gid=101,mode=1777
      - /var/cache/nginx:uid=101,gid=101
      - /var/run:uid=101,gid=101
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    networks:
      - public-net
      - inner-net

  loadbalancer:
    image: nginx:1.27-alpine
    container_name: momo-store-lb
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8081:8081"
    volumes:
      - ./nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - lb-logs:/var/log/nginx:rw
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 128M
      restart_policy:
        condition: unless-stopped
    networks:
      - public-net
      - inner-net
    profiles: ["lb", "dev", "prod"]
    read_only: true
    tmpfs:
      - /tmp:uid=101,gid=101
      - /var/cache/nginx:uid=101,gid=101
      - /var/run:uid=101,gid=101
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    user: "101:101"

networks:
  public-net:
    driver: bridge
  inner-net:
    driver: bridge
    internal: true

volumes:
  backend-data:
    driver: local
  backend-logs:
    driver: local
  frontend-logs:
    driver: local
  lb-logs:
    driver: local
